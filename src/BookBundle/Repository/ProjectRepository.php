<?php

namespace BookBundle\Repository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends \Doctrine\ORM\EntityRepository
{
    public function searchBy($schools = null, $categories = null, $promotions = null)
    {
        $qb = $this->createQueryBuilder('p');

        if ($schools) {
            $qb
                ->andWhere('p.school IN (:school)')
                    ->setParameter('school', $schools);
        }

        if ($categories) {
            $qb
                ->andWhere('p.category IN (:category)')
                    ->setParameter('category', $categories);
        }

        if ($promotions) {
            $qb
                ->leftJoin('p.school','s')
                ->leftJoin('s.promotions','pr', 'pr.school_id = s.id')
                ->where('pr.id IN (:promotion)')
                    ->setParameter('promotion', $promotions);
        }

        return $qb->getQuery()->getResult();
    }

    public function getLike($input)
    {
        $input = "%" . $input . "%";
        $qb = $this->createQueryBuilder('p')
            ->select('p.title','p.id')
            ->where('p.title LIKE :title')
                ->setParameter('title', $input)
            ->getQuery();
        return $qb->getResult();
    }

    public function getLikeAdmin($input)
    {
        $input = "%" . $input . "%";
        $qb = $this->createQueryBuilder('p')
            ->select('p.title','p.id','p.customer','p.date','p.status','c.label','s.school','p.path')
            ->leftJoin('p.school','s')
            ->leftJoin('p.category','c')
            ->where('p.title LIKE :title')
            ->setParameter('title', $input)
            ->getQuery();
        return $qb->getResult();
    }
}
